@model ProductAddOrEditViewModel

@{
    ViewData["Title"] = "Edit";
}

<h1>
    @(Model.AddsNew ? "Add a new product" : "Edit product")
</h1>
@Html.ValidationSummary(true)
<br>
<div class="accountInfo">
    @using (Html.BeginForm(FormMethod.Post))
    {
    <fieldset>
        <legend>Product information</legend>
        @if (!Model.AddsNew)
        {
            #pragma warning disable CS8602 // False positive, cannot happen in template usage
            Html.HiddenFor(m => m.Product.ProductId);
            Html.HiddenFor(m => m.Product.SupplierId);
            #pragma warning restore CS8602
            <p>
                @{ #pragma warning disable CS8602 } <!-- False positive, cannot happen in template usage -->
                @Html.LabelFor(m => m.Product.ProductId)
                @{ #pragma warning restore CS8602 }
                <span class="textEntry">@Model.Product?.ProductId</span>
            </p>
        }
        <p>
            @{ #pragma warning disable CS8602 } <!-- False positive, cannot happen in template usage -->
            @Html.LabelFor(m => m.Product.ProductName)
            @Html.TextBoxFor(m => m.Product.ProductName, new { @value = Model.Product?.ProductName })
            @Html.ValidationMessageFor(m => m.Product.ProductName)
            @{ #pragma warning restore CS8602 }
        </p>
        <p>
            @{ #pragma warning disable CS8602 } <!-- False positive, cannot happen in template usage -->
            @Html.LabelFor(m => m.Product.Category)
            <select asp-for="Product.CategoryId">
                @foreach (var category in Model.ProductCategories)
                {
                    <option value="@category.CategoryId"
                            title="@category.Description"
                            selected=@(Model.Product?.CategoryId == category.CategoryId ? "selected" : null)>
                        @category.CategoryName
                    </option>
                }
            </select>
            @{ #pragma warning restore CS8602 }
        </p>
        @{ #pragma warning disable CS8602 } <!-- False positive, cannot happen in template usage -->
        <p>
            @Html.LabelFor(m => m.Product.QuantityPerUnit)
            @Html.TextBoxFor(m => m.Product.QuantityPerUnit, new { @value = Model.Product?.QuantityPerUnit })
            @Html.ValidationMessageFor(m => m.Product.QuantityPerUnit)
        </p>
        <p>
            @Html.LabelFor(m => m.Product.DecimalUnitPrice)
            @Html.TextBoxFor(m => m.Product.DecimalUnitPrice, new { @value = Model.Product?.DecimalUnitPrice })
            @Html.ValidationMessageFor(m => m.Product.DecimalUnitPrice)
        </p>
        <p>
            @Html.LabelFor(m => m.Product.UnitsInStock)
            @Html.TextBoxFor(m => m.Product.UnitsInStock, new { @value = Model.Product?.UnitsInStock })
            @Html.ValidationMessageFor(m => m.Product.UnitsInStock)
        </p>
        <p>
            @Html.LabelFor(m => m.Product.UnitsOnOrder)
            @Html.TextBoxFor(m => m.Product.UnitsOnOrder, new { @value = Model.Product?.UnitsOnOrder })
            @Html.ValidationMessageFor(m => m.Product.UnitsOnOrder)
        </p>
        <p>
            @Html.LabelFor(m => m.Product.ReorderLevel)
            @Html.TextBoxFor(m => m.Product.ReorderLevel, new { @value = Model.Product?.ReorderLevel })
            @Html.ValidationMessageFor(m => m.Product.ReorderLevel)
        </p>
        @{ #pragma warning restore CS8602 }
        @if (Model.AddsNew)
        {
            <p>
                @{ #pragma warning disable CS8602 } <!-- False positive, cannot happen in template usage -->
                @Html.LabelFor(m => m.Product.Supplier)
                @if(Model.Suppliers != null)
                {
                    <select asp-for="Product.SupplierId">
                        @foreach (var supplier in Model.Suppliers)
                        {
                            <option value="@supplier.SupplierId">
                                @supplier.CompanyName
                            </option>
                        }
                    </select>
                }
                @Html.ValidationMessageFor(m => m.Product.Supplier)
                @{ #pragma warning restore CS8602 }
            </p>
        }
        <p>
            @{ #pragma warning disable CS8602 } <!-- False positive, cannot happen in template usage -->
            @Html.CheckBoxFor(m => m.Product.Discontinued, new { @checked = Model.Product?.Discontinued ?? false })
            @Html.LabelFor(m => m.Product.Discontinued)
            @{ #pragma warning restore CS8602 }
        </p>
    </fieldset>
    <p class="submitButton">
        <input type="submit" value="Save changes">
    </p>
    }
</div>